name: Deploy Blog to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'blog/**'
      - 'admin/**'
      - 'index.html'
      - 'css/**'
      - 'js/**'
      - 'assets/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'blog/**'
      - 'admin/**'
      - 'index.html'
      - 'css/**'
      - 'js/**'
      - 'assets/**'

  # Allow manual deployment
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for better caching

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            npm ci
          else
            echo "No package.json found, skipping npm install"
          fi

      - name: Build static site
        run: |
          # For Astro (uncomment if using Astro)
          # npm run build

          # For static HTML/CSS/JS (current setup)
          echo "Static site build completed"

          # Create dist directory if it doesn't exist
          mkdir -p dist

          # Copy only needed files to dist (avoid copying dist into itself)
          cp -r blog admin index.html css js assets dist/

          # Remove unnecessary files from dist
          rm -rf dist/.git
          rm -rf dist/.github
          rm -rf dist/node_modules
          rm -rf dist/package*.json
          rm -rf dist/README.md

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Optional: Notify on deployment
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    steps:
      - name: Deployment Status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "‚úÖ Blog deployed successfully to GitHub Pages"
            echo "üåê Site URL: ${{ needs.deploy.outputs.page_url }}"
          else
            echo "‚ùå Deployment failed"
            exit 1
          fi
